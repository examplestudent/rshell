# score / total will get filled in here

  [/5]  run any command with no params
  [/5]  run any command with a small number of params
  [/5]  run any command with a large (>10) number of params
  [/5]  run both a command in `/bin` and a command in the current directory;
          for example, run rshell from within rshell
  [/5]  if command doesn't exist, must print appropriate error message
  [/5]  verify their parsing works by trying to add lots of spaces between
          parameters, e.g. `     ls      -a -l        -R`


  [/15] simple example showing two commands connected with each operator;
          they must show both the case where the first command succeeds
          and the case where the first command fails.
  [/5]  an example showing lots of commands chained together
  [/10] two examples mixing and matching different operators in one command
  [/5]  parsing example showing that the operators can be right next to each
          command or they can have spaces separating them;
          e.g. `ls -l||cat        ; rm -rf *`


  [/5]  exit all by itself
  [/5]  exit with parameters passed to it (I don't care if it exits or prints
          an error)
  [/5]  exit as a parameter to something else shouldn't exit, e.g. `ls -l exit`
  [/5]  exit in a chain of commands should exit, e.g. `ls -l; exit`


  [/10] comment within a command: `ls -l # this is a comment`
  [/5]  comment on a line by itself
  [/5]  comment where `#` touches something else:
          `ls -l# this is a comment here`

  [/0]  if all of their prompts have the information, then +10pts
  [/0]  if they provide extra test cases that are particularly nice, they can
          get up to +10 points

